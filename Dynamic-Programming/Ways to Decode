Ways to Decode
A message containing letters from A-Zis being encoded to numbers using the following mapping:
'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message containing digits, determine the total number of ways to decode it. Example : Given encoded message "12", it could be decoded as "AB" (1 2) or "L" (12). The number of ways decoding "12" is 2.


solution:

int Solution::numDecodings(string A) {
    if(A.length()==0 || A[0]=='0')return 0;
    int n=A.length();
    int a[n];
    a[0]=1;
    for(int i=1;i<n;i++){
        int k=0;
        if(A[i]=='0' && A[i-1]=='0')return 0;
        if(A[i]>='1' && A[i]<='9')k+=a[i-1];
        if((A[i]<='6' && A[i-1]=='2') || (A[i-1]=='1')){
            if(i>1)
                k+=a[i-2];
            else
                k+=1;
        }
        a[i]=k;
    }
    return a[n-1];
}
