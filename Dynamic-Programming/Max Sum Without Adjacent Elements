Max Sum Without Adjacent Elements
Given a 2 * N Grid of numbers, choose numbers such that the sum of the numbers is maximum and no two chosen numbers are adjacent horizontally, vertically or diagonally, and return it. Example:
Grid:
    1 2 3 4
    2 3 4 5
so we will choose
3 and 5 so sum will be 3 + 5 = 8
Note that you can choose more than 2 numbers

solution:

int Solution::adjacent(vector<vector<int> > &A) {
    for(int i=0;i<A[0].size();i++)
        A[0][i]=max(A[0][i],A[1][i]);
        
    long long inc=A[0][0];
    long long exc=0;
    if(A[0].size()==1)return inc;
    long long m=-1;
    for(long long i=1;i<A[0].size();i++){
        m=max(exc+A[0][i],inc);
        
        exc=inc;
        inc=m;
    }
    
    return m;
}
