Merge K Sorted Lists
Merge k sorted linked lists and return it as one sorted list. Example :
1 -> 10 -> 20
4 -> 11 -> 13
3 -> 8 -> 9
will result in
1 -> 3 -> 4 -> 8 -> 9 -> 10 -> 11 -> 13 -> 20

solution:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
typedef pair<int,ListNode*> pi;
ListNode* Solution::mergeKLists(vector<ListNode*> &A) {
    priority_queue<pi, vector<pi>, greater<pi> > pq;
    for(int i=0;i<A.size();i++){
        if(A[i])
            pq.push(make_pair(A[i]->val,A[i]));
    }
    ListNode *t,*h;
    if(pq.empty())return NULL;
    pi temp=pq.top();
    t=temp.second;
    h=t;
    pq.pop();
    if(temp.second->next){
        temp.second=temp.second->next;
        temp.first=temp.second->val;
        pq.push(temp);
    }
    while(!pq.empty()){
        temp=pq.top();
        t->next=temp.second;
        t=t->next;
        pq.pop();
        if(temp.second->next){
            temp.second=temp.second->next;
            temp.first=temp.second->val;
            pq.push(temp);
        }
    }
    return h;
}
